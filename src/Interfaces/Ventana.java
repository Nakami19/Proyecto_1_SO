/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Clases.Developer;
import Clases.Director;
import Clases.Estudio;
import Clases.ProjectManager;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Natalia
 */
public class Ventana extends javax.swing.JFrame {

            Estudio nick = new Estudio("Nickelodeon", 5);
            Estudio cn = new Estudio("Cartoon Network", 5);
            boolean iniciado=false;
            int max_nk = 13; //Carnet de Natalia Rivas termina en 1
            int max_cn = 12; //Carnet de Tomás Gil termina en 0
            private String path;
    
    /**
     * Creates new form NewJFrame
     */
    public Ventana() {
        initComponents();        
        this.setLocationRelativeTo(null);
        
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }
    
    
    public static javax.swing.JLabel getCn_Director_State(){
        return Cn_Director_State;
    }
    
    public static javax.swing.JLabel getCn_Pm_State(){
        return Cn_Pm_State;
    }
    
    public static javax.swing.JLabel getNk_Director_State(){
        return Nk_Pm_State;
    }
    
    public static javax.swing.JLabel getNk_Pm_State(){
        return Nk_Pm_State;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Config = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        Cont_Deadline = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        Cont_Day_Duration = new javax.swing.JSpinner();
        IniciarSimulacion = new javax.swing.JButton();
        Cartoon = new javax.swing.JPanel();
        Cont_Guionista_PW_CN = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Cont_Guionista_CN = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        Cont_Escenario_CN = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        Cont_Animador_CN = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        Cont_Actor_Doblaje_CN = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        Cont_Ensamblador_CN = new javax.swing.JSpinner();
        Cn_Director_State = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Cn_Pm_State = new javax.swing.JLabel();
        Nick = new javax.swing.JPanel();
        Cont_Guionista_PW_NK = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Cont_Guionista_NK = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        Cont_Escenario_NK = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        Cont_Animador_NK = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        Cont_Actor_Doblaje_NK = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        Cont_Ensamblador_NK = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        Nk_Director_State = new javax.swing.JLabel();
        Nk_Pm_State = new javax.swing.JLabel();
        Graf = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));

        Config.setBackground(new java.awt.Color(204, 153, 255));
        Config.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("DURACIÓN DE DÍAS (S): ");
        Config.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        saveButton.setText("GUARDAR");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        Config.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        jLabel14.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("GUARDAR: ");
        Config.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        Cont_Deadline.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Deadline, ""));
        Cont_Deadline.setValue(1);
        Cont_Deadline.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_DeadlineStateChanged(evt);
            }
        });
        Config.add(Cont_Deadline, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 80, 20));

        jLabel15.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("DIAS ENTRE DEADLINES: ");
        Config.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        Cont_Day_Duration.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Day_Duration, ""));
        Cont_Day_Duration.setValue(1);
        Cont_Day_Duration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Day_DurationStateChanged(evt);
            }
        });
        Config.add(Cont_Day_Duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 80, 20));

        IniciarSimulacion.setText("Iniciar simulacion");
        IniciarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarSimulacionActionPerformed(evt);
            }
        });
        Config.add(IniciarSimulacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, -1, -1));

        jTabbedPane1.addTab("Config", Config);

        Cartoon.setBackground(new java.awt.Color(0, 0, 0));
        Cartoon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Cont_Guionista_PW_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Guionista_PW_CN, ""));
        Cont_Guionista_PW_CN.setValue(1);
        Cont_Guionista_PW_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Guionista_PW_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Guionista_PW_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 80, 20));

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel1.setForeground(null);
        jLabel1.setText("ENSAMBLADORES:");
        Cartoon.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 210, -1));

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel2.setForeground(null);
        jLabel2.setText("MANEJADOR DE");
        Cartoon.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        Cont_Guionista_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Guionista_CN, ""));
        Cont_Guionista_CN.setValue(1);
        Cont_Guionista_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Guionista_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Guionista_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 80, 20));

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel3.setForeground(null);
        jLabel3.setText("DISEÑADORES DE  ESCENARIOS:");
        Cartoon.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 220, -1));

        Cont_Escenario_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Escenario_CN, ""));
        Cont_Escenario_CN.setValue(1);
        Cont_Escenario_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Escenario_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Escenario_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 80, 20));

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel4.setForeground(null);
        jLabel4.setText("ANIMADORES DE  PERSONAJES:");
        Cartoon.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 220, -1));

        Cont_Animador_CN.setModel(new javax.swing.SpinnerNumberModel());
        Cont_Animador_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Animador_CN, ""));
        Cont_Animador_CN.setValue(1);
        Cont_Animador_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Animador_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Animador_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 80, 20));

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel5.setForeground(null);
        jLabel5.setText("ACTORES DE DOBLAJE:");
        Cartoon.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 210, -1));

        Cont_Actor_Doblaje_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Actor_Doblaje_CN, ""));
        Cont_Actor_Doblaje_CN.setValue(1);
        Cont_Actor_Doblaje_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Actor_Doblaje_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Actor_Doblaje_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 80, 20));

        jLabel11.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel11.setForeground(null);
        jLabel11.setText("GUIONISTAS DE PLOT-TWIST:");
        Cartoon.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 210, -1));

        Cont_Ensamblador_CN.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Ensamblador_CN, ""));
        Cont_Ensamblador_CN.setValue(1);
        Cont_Ensamblador_CN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Ensamblador_CNStateChanged(evt);
            }
        });
        Cartoon.add(Cont_Ensamblador_CN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 80, -1));

        Cn_Director_State.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        Cn_Director_State.setForeground(null);
        Cn_Director_State.setText("Trabajando");
        Cartoon.add(Cn_Director_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        jLabel17.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel17.setForeground(null);
        jLabel17.setText("CANTIDAD DE TRABAJADORES:");
        Cartoon.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabel18.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel18.setForeground(null);
        jLabel18.setText("GUIONISTAS:");
        Cartoon.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        jLabel19.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel19.setForeground(null);
        jLabel19.setText("PROJECT MANAGER:");
        Cartoon.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel25.setForeground(null);
        jLabel25.setText("ESTADOS:");
        Cartoon.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLabel26.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel26.setForeground(null);
        jLabel26.setText("DIRECTOR:");
        Cartoon.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        Cn_Pm_State.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        Cn_Pm_State.setForeground(null);
        Cn_Pm_State.setText("Trabajando");
        Cartoon.add(Cn_Pm_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        jTabbedPane1.addTab("Cartoon", Cartoon);

        Nick.setBackground(new java.awt.Color(255, 153, 0));
        Nick.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Cont_Guionista_PW_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Guionista_PW_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Guionista_PW_NK, ""));
        Cont_Guionista_PW_NK.setValue(1);
        Cont_Guionista_PW_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Guionista_PW_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Guionista_PW_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 80, 20));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("GUIONISTAS DE PLOT-TWIST:");
        Nick.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 210, -1));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("GUIONISTAS:");
        Nick.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        Cont_Guionista_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Guionista_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Guionista_NK, ""));
        Cont_Guionista_NK.setValue(1);
        Cont_Guionista_NK.setVerifyInputWhenFocusTarget(false);
        Cont_Guionista_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Guionista_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Guionista_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 80, 20));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("DISEÑADORES DE  ESCENARIOS:");
        Nick.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 220, -1));

        Cont_Escenario_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Escenario_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Escenario_NK, ""));
        Cont_Escenario_NK.setValue(1);
        Cont_Escenario_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Escenario_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Escenario_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 80, 20));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("ANIMADORES DE  PERSONAJES:");
        Nick.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 220, -1));

        Cont_Animador_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Animador_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Animador_NK, ""));
        Cont_Animador_NK.setValue(1);
        Cont_Animador_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Animador_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Animador_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 80, 20));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("ACTORES DE DOBLAJE:");
        Nick.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 210, -1));

        Cont_Actor_Doblaje_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Actor_Doblaje_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Actor_Doblaje_NK, ""));
        Cont_Actor_Doblaje_NK.setValue(1);
        Cont_Actor_Doblaje_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Actor_Doblaje_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Actor_Doblaje_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 80, 20));

        jLabel12.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("ENSAMBLADORES:");
        Nick.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 210, -1));

        Cont_Ensamblador_NK.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cont_Ensamblador_NK.setEditor(new javax.swing.JSpinner.NumberEditor(Cont_Ensamblador_NK, ""));
        Cont_Ensamblador_NK.setValue(1);
        Cont_Ensamblador_NK.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Ensamblador_NKStateChanged(evt);
            }
        });
        Nick.add(Cont_Ensamblador_NK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 80, -1));

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("DIRECTOR:");
        Nick.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("PROJECT MANAGER:");
        Nick.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("MANEJADOR DE");
        Nick.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("ESTADOS:");
        Nick.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("CANTIDAD DE TRABAJADORES:");
        Nick.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        Nk_Director_State.setBackground(new java.awt.Color(0, 0, 0));
        Nk_Director_State.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        Nk_Director_State.setForeground(new java.awt.Color(0, 0, 0));
        Nk_Director_State.setText("Trabajando");
        Nick.add(Nk_Director_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        Nk_Pm_State.setBackground(new java.awt.Color(0, 0, 0));
        Nk_Pm_State.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        Nk_Pm_State.setForeground(new java.awt.Color(0, 0, 0));
        Nk_Pm_State.setText("Trabajando");
        Nick.add(Nk_Pm_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        jTabbedPane1.addTab("Nick", Nick);

        Graf.setBackground(new java.awt.Color(204, 153, 255));
        Graf.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPane1.addTab("Grafico", Graf);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Cont_Guionista_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Guionista_CNStateChanged
        if(iniciado == true){
            if((int)this.Cont_Guionista_CN.getValue() <= 0){
                this.Cont_Guionista_CN.setValue(1);
                this.repaint();
            }        
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Guionista_CN.setValue((int)this.Cont_Guionista_CN.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = cn.getListaGuion().getSize();
                int cont2 = (int) Cont_Guionista_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Guionista_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Guionista_CNStateChanged

    private void Cont_Escenario_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Escenario_CNStateChanged
        if(iniciado == true){
            if((int)this.Cont_Escenario_CN.getValue() <= 0){
                this.Cont_Escenario_CN.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Escenario_CN.setValue((int)this.Cont_Escenario_CN.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = cn.getListaEscenario().getSize();
                int cont2 = (int) Cont_Escenario_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(1);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(1, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Escenario_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Escenario_CNStateChanged

    private void Cont_Animador_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Animador_CNStateChanged
        if(iniciado == true){
            if((int)this.Cont_Animador_CN.getValue() <= 0){
                this.Cont_Animador_CN.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Animador_CN.setValue((int)this.Cont_Animador_CN.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = cn.getListaAnimacion().getSize();
                int cont2 = (int) Cont_Animador_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(2);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(2, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Animador_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Animador_CNStateChanged

    private void Cont_Actor_Doblaje_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Actor_Doblaje_CNStateChanged
        if(iniciado == true){
            if((int)this.Cont_Actor_Doblaje_CN.getValue() <= 0){
                this.Cont_Actor_Doblaje_CN.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Actor_Doblaje_CN.setValue((int)this.Cont_Actor_Doblaje_CN.getValue() - 1);
                this.repaint();
            }
            else{        
                int cont = cn.getListaDoblaje().getSize();
                int cont2 = (int) Cont_Actor_Doblaje_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(3);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(3, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Actor_Doblaje_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Actor_Doblaje_CNStateChanged

    private void Cont_Guionista_PW_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Guionista_PW_CNStateChanged
        if(iniciado==true){
            if((int)this.Cont_Guionista_PW_CN.getValue() <= 0){
                this.Cont_Guionista_PW_CN.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Guionista_PW_CN.setValue((int)this.Cont_Guionista_PW_CN.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = cn.getListaPlotTwist().getSize();
                int cont2 = (int) Cont_Guionista_PW_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(4);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(4, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Guionista_PW_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Guionista_PW_CNStateChanged

    private void Cont_Guionista_PW_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Guionista_PW_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Guionista_PW_NK.getValue() <= 0){
                this.Cont_Guionista_PW_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Guionista_PW_NK.setValue((int)this.Cont_Guionista_PW_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaPlotTwist().getSize();
                int cont2 = (int) Cont_Guionista_PW_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(4);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(4, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Guionista_PW_NK.setValue(1);
            this.repaint();
        }        
    }//GEN-LAST:event_Cont_Guionista_PW_NKStateChanged

    private void Cont_Guionista_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Guionista_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Guionista_NK.getValue() <= 0){
                this.Cont_Guionista_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Guionista_NK.setValue((int)this.Cont_Guionista_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaGuion().getSize();
                int cont2 = (int) Cont_Guionista_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Guionista_NK.setValue(1);
            this.repaint();
        }        
    }//GEN-LAST:event_Cont_Guionista_NKStateChanged

    private void Cont_Escenario_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Escenario_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Escenario_NK.getValue() <= 0){
                this.Cont_Escenario_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Escenario_NK.setValue((int)this.Cont_Escenario_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaEscenario().getSize();
                int cont2 = (int) Cont_Escenario_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(1);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(1, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Escenario_NK.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Escenario_NKStateChanged

    private void Cont_Animador_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Animador_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Animador_NK.getValue() <= 0){
                this.Cont_Animador_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Animador_NK.setValue((int)this.Cont_Animador_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaAnimacion().getSize();
                int cont2 = (int) Cont_Animador_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(2);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(2, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Animador_NK.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Animador_NKStateChanged

    private void Cont_Actor_Doblaje_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Actor_Doblaje_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Actor_Doblaje_NK.getValue() <= 0){
                this.Cont_Actor_Doblaje_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Actor_Doblaje_NK.setValue((int)this.Cont_Actor_Doblaje_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaDoblaje().getSize();
                int cont2 = (int) Cont_Actor_Doblaje_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(3);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(3, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Actor_Doblaje_NK.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Actor_Doblaje_NKStateChanged

    private void Cont_Ensamblador_CNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Ensamblador_CNStateChanged
        if(iniciado == true){
            if((int)this.Cont_Ensamblador_CN.getValue() <= 0){
                this.Cont_Ensamblador_CN.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_CN.getValue() + (int)this.Cont_Escenario_CN.getValue() + (int)this.Cont_Animador_CN.getValue() + (int)this.Cont_Actor_Doblaje_CN.getValue() + (int)this.Cont_Ensamblador_CN.getValue() + (int)this.Cont_Guionista_PW_CN.getValue() > max_cn){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Ensamblador_CN.setValue((int)this.Cont_Ensamblador_CN.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = cn.getListaEnsamblador().getSize();
                int cont2 = (int) Cont_Ensamblador_CN.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        cn.deleteDeveloper(5);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        cn.AddDeveloper(5, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Ensamblador_CN.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Ensamblador_CNStateChanged

    private void Cont_Ensamblador_NKStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Ensamblador_NKStateChanged
        if(iniciado == true){
            if((int)this.Cont_Ensamblador_NK.getValue() <= 0){
                this.Cont_Ensamblador_NK.setValue(1);
                this.repaint();
            }
            else if((int)this.Cont_Guionista_NK.getValue() + (int)this.Cont_Escenario_NK.getValue() + (int)this.Cont_Animador_NK.getValue() + (int)this.Cont_Actor_Doblaje_NK.getValue() + (int)this.Cont_Ensamblador_NK.getValue() + (int)this.Cont_Guionista_PW_NK.getValue() > max_nk){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Cont_Ensamblador_NK.setValue((int)this.Cont_Ensamblador_NK.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = nick.getListaEnsamblador().getSize();
                int cont2 = (int) Cont_Ensamblador_NK.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        nick.deleteDeveloper(5);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        nick.AddDeveloper(5, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Cont_Ensamblador_NK.setValue(1);
            this.repaint();
        }        
    }//GEN-LAST:event_Cont_Ensamblador_NKStateChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if(iniciado == true){
            //Cartoon
            int guionCN=(int) this.Cont_Guionista_CN.getValue();
            int escCN=(int) this.Cont_Escenario_CN.getValue();
            int aniCn=(int) this.Cont_Animador_CN.getValue();
            int doblaCN=(int) this.Cont_Actor_Doblaje_CN.getValue();
            int plotCN=(int) this.Cont_Guionista_PW_CN.getValue();
            int ensamCN=(int) this.Cont_Ensamblador_CN.getValue();
            //Nick
            int guionN=(int) this.Cont_Guionista_NK.getValue();
            int escN=(int) this.Cont_Escenario_NK.getValue();
            int aniN=(int) this.Cont_Animador_NK.getValue();
            int doblaN=(int) this.Cont_Actor_Doblaje_NK.getValue();
            int plotN=(int) this.Cont_Guionista_PW_NK.getValue();
            int ensamN=(int) this.Cont_Ensamblador_NK.getValue();
            
            int deadline=(int) this.Cont_Deadline.getValue();
            int DuracionD=(int) this.Cont_Day_Duration.getValue();
            
            String TodoTXT="Duracion\n"+DuracionD+";\nDeadline\n"+deadline+";\nCartoon-\nTrabajadores:\nguionista,"+guionCN+
                    "\nescenarios,"+escCN+"\nanimador,"+aniCn+"\ndoblaje,"+doblaCN+"\nplotTwist,"+plotCN+"\nensambladores,"+ensamCN+";\n"
                    + "Nick-\nTrabajadores:\nguionista,"+guionN+
                    "\nescenarios,"+escN+"\nanimador,"+aniN+"\ndoblaje,"+doblaN+"\nplotTwist,"+plotN+"\nensambladores,"+ensamN;
            
            System.out.println(TodoTXT);
            
            try {
            if(getPath()!=null) {
            PrintWriter pw=new PrintWriter(getPath());
            pw.print(TodoTXT);
            pw.close();
            JOptionPane.showMessageDialog(null, "Guardado exitoso");
            //System.exit(0);
            }
            else{JOptionPane.showMessageDialog(null, "Error!! Primero debe cargar un archivo txt");}
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!!!!!");
            System.exit(0);
        } 
        
        }else{
            JOptionPane.showMessageDialog(null,"La simulación no ha empezado todavía, no se puede guardar");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void Cont_DeadlineStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_DeadlineStateChanged
        if(iniciado == true){
            if((int)this.Cont_Deadline.getValue() <= 0){
                this.Cont_Deadline.setValue(1);
                this.repaint();
            }
        }else{
            this.Cont_Deadline.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_DeadlineStateChanged

    private void Cont_Day_DurationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Day_DurationStateChanged
        if(iniciado == true){
            if((int)this.Cont_Day_Duration.getValue() <= 0){
                this.Cont_Day_Duration.setValue(1);
                this.repaint();
            }
        }else{
            this.Cont_Day_Duration.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Day_DurationStateChanged

    private void IniciarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarSimulacionActionPerformed
        // TODO add your handling code here:
//    
//    //se lee el txt
    if (iniciado==false){
        iniciado=true;
    JFileChooser file = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(".TXT","txt");
    file.setFileSelectionMode(JFileChooser.FILES_ONLY);
    file.setFileFilter(filter);
    int selection=file.showOpenDialog(this);
    
    if(selection==JFileChooser.APPROVE_OPTION) {
        File archive=file.getSelectedFile(); 
        String path=archive.getAbsolutePath();
        setPath(path);
    
        if(!path.contains("txt")) {
        JOptionPane.showMessageDialog(null, "Por favor elija un archivo del tipo txt");
        }
        else {
        try{
            File archivo = new File (path);
            FileReader fr = new FileReader(archivo); 
            BufferedReader br = new BufferedReader(fr); 
                 
            String cadena;
            String complete=""; 
      
            while ((cadena=br.readLine())!=null) { //lee hasta llegar a null que significa que se acabo el archivo

                if(!cadena.isEmpty()&& !cadena.isBlank()) { //revisa que la linea no sea vacia/que el tamaño de la cadena sea 0
                    complete+=cadena+"\n";
                }
            }
                
            fr.close();
            br.close();
            complete=complete.trim(); //quita linea en blanco al final
            //el !"".equals es para verificar que el string no sea solo un espacio en blanco
            if(!"".equals(complete)) {
                String[] info;
                String [] todo=complete.split(";");
                String [] Dias=todo[0].split("\n");
                int duracionDias=Integer.parseInt(Dias[1]);
                if(duracionDias<=0) {
                    throw new Exception("La duracion del dia no puede ser 0");
                }
                this.Cont_Day_Duration.setValue(duracionDias);
                //System.out.println(duracionDias); //todo bien aqui
                String[] Diasdead=todo[1].split("\n");
                //System.out.println(Diasdead[1]);
                int Deadline=Integer.parseInt(Diasdead[2]);
                if(Deadline<=0) {
                    throw new Exception("El tiempo de entrega no puede ser 0");
                }
                this.Cont_Deadline.setValue(Deadline);
                
                //ya tengo la duracion del dia y la deadline se crean/agregan las cosas
                nick.setDuracionDia(duracionDias);
                cn.setDuracionDia(duracionDias);
                nick.setDiasEntrega(Deadline);
                cn.setDiasEntrega(Deadline);
                
                nick.getPersonalDrive().setDiasEntrega(Deadline);
                nick.getPersonalDrive().setDiasEntregaOriginal(Deadline);
                
                cn.getPersonalDrive().setDiasEntrega(Deadline);
                cn.getPersonalDrive().setDiasEntregaOriginal(Deadline);
                
                ProjectManager nickpm=new ProjectManager(40,duracionDias,nick.getMutex(),nick.getPersonalDrive());
                Director nickDir = new Director(60, duracionDias, nick.getMutex(), nick.getPersonalDrive(), nickpm);
                ProjectManager cartoonpm=new ProjectManager(40,duracionDias,cn.getMutex(),cn.getPersonalDrive());
                Director cartoonDir = new Director(60, duracionDias, cn.getMutex(), cn.getPersonalDrive(), cartoonpm);
                
               //todo2 tiene cosas de cartoon
                todo[2]=todo[2].trim();
                String [] infoestu1=todo[2].split("-");
                //todo3 tiene cosas de nick
                todo[3]=todo[3].trim();
                String [] infoestu2=todo[3].split("-");
                
                if (infoestu1[0].compareTo("Cartoon")==0) { //el if es porsia 
//                     System.out.println("jajajaj "+infoestu1[0]);
//                     System.out.println(infoestu1[1]);
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            cn.AddDeveloper(i,Integer.parseInt(cantidad[1]));
                         }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    cartoonpm.start();
                    cartoonDir.start();
                    System.out.println("Listo cartoon");
                    this.Cont_Actor_Doblaje_CN.setValue(cn.getListaDoblaje().getSize());
                    this.Cont_Animador_CN.setValue(cn.getListaAnimacion().getSize());
                    this.Cont_Ensamblador_CN.setValue(cn.getListaEnsamblador().getSize());
                    this.Cont_Escenario_CN.setValue(cn.getListaEscenario().getSize());
                    this.Cont_Guionista_CN.setValue(cn.getListaGuion().getSize());
                    this.Cont_Guionista_PW_CN.setValue(cn.getListaPlotTwist().getSize());
                 
                 }
                 else if (infoestu1[0].compareTo("Nick")==0) {
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            nick.AddDeveloper(i,Integer.parseInt(cantidad[1]));
                         } else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                    }
                    nickpm.start();
                    nickDir.start(); 
                    this.Cont_Actor_Doblaje_NK.setValue(nick.getListaDoblaje().getSize());
                    this.Cont_Animador_NK.setValue(nick.getListaAnimacion().getSize());
                    this.Cont_Ensamblador_NK.setValue(nick.getListaEnsamblador().getSize());
                    this.Cont_Escenario_NK.setValue(nick.getListaEscenario().getSize());
                    this.Cont_Guionista_NK.setValue(nick.getListaGuion().getSize());
                    this.Cont_Guionista_PW_NK.setValue(nick.getListaPlotTwist().getSize());
                    
                 }
                 
                 if (infoestu2[0].compareTo("Cartoon")==0) {
//                     System.out.println("jejejeje "+infoestu2[0]);
//                     System.out.println(infoestu2[1]);
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) { 
                         cn.AddDeveloper(i, Integer.parseInt(cantidad[1]));
                        }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    cartoonpm.start();
                    cartoonDir.start(); 
                    this.Cont_Actor_Doblaje_CN.setValue(cn.getListaDoblaje().getSize());
                    this.Cont_Animador_CN.setValue(cn.getListaAnimacion().getSize());
                    this.Cont_Ensamblador_CN.setValue(cn.getListaEnsamblador().getSize());
                    this.Cont_Escenario_CN.setValue(cn.getListaEscenario().getSize());
                    this.Cont_Guionista_CN.setValue(cn.getListaGuion().getSize());
                    this.Cont_Guionista_PW_CN.setValue(cn.getListaPlotTwist().getSize());
                 }
                 else if (infoestu2[0].compareTo("Nick")==0) {
                     String [] divTra=infoestu2[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     System.out.println(infoestu2[0]);
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            nick.AddDeveloper(i, Integer.parseInt(cantidad[1]));
                         }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    nickpm.start();
                    nickDir.start(); 
                    this.Cont_Actor_Doblaje_NK.setValue(nick.getListaDoblaje().getSize());
                    this.Cont_Animador_NK.setValue(nick.getListaAnimacion().getSize());
                    this.Cont_Ensamblador_NK.setValue(nick.getListaEnsamblador().getSize());
                    this.Cont_Escenario_NK.setValue(nick.getListaEscenario().getSize());
                    this.Cont_Guionista_NK.setValue(nick.getListaGuion().getSize());
                    this.Cont_Guionista_PW_NK.setValue(nick.getListaPlotTwist().getSize());
                      
                      System.out.println("Listo nick");
                 
                 
                 }
                 
                
//                for (int i = 0; i < todo.length; i++) {
//                  System.out.println(todo[i]);  
//                }
                
            
            }
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erorr!!!! Asegurate de haber cargado el archivo correcto");
            System.exit(0);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "La simulacion ya ha iniciado");
    }
    }

//    nickpm.start();
//    nickDir.start();
    }//GEN-LAST:event_IniciarSimulacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cartoon;
    private static javax.swing.JLabel Cn_Director_State;
    private static javax.swing.JLabel Cn_Pm_State;
    private javax.swing.JPanel Config;
    private javax.swing.JSpinner Cont_Actor_Doblaje_CN;
    private javax.swing.JSpinner Cont_Actor_Doblaje_NK;
    private javax.swing.JSpinner Cont_Animador_CN;
    private javax.swing.JSpinner Cont_Animador_NK;
    private javax.swing.JSpinner Cont_Day_Duration;
    private javax.swing.JSpinner Cont_Deadline;
    private javax.swing.JSpinner Cont_Ensamblador_CN;
    private javax.swing.JSpinner Cont_Ensamblador_NK;
    private javax.swing.JSpinner Cont_Escenario_CN;
    private javax.swing.JSpinner Cont_Escenario_NK;
    private javax.swing.JSpinner Cont_Guionista_CN;
    private javax.swing.JSpinner Cont_Guionista_NK;
    private javax.swing.JSpinner Cont_Guionista_PW_CN;
    private javax.swing.JSpinner Cont_Guionista_PW_NK;
    private javax.swing.JPanel Graf;
    private javax.swing.JButton IniciarSimulacion;
    private javax.swing.JPanel Nick;
    private static javax.swing.JLabel Nk_Director_State;
    private static javax.swing.JLabel Nk_Pm_State;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
